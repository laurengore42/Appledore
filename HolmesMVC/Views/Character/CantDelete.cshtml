@using HolmesMVC
@model HolmesMVC.Models.Character

@{
	ViewBag.Title = "Can't Delete";
}

<h2>@ViewBag.Title</h2>

@if (Model.Appearances.Any())
{
	<p>You can't delete @Model.Forename @Model.Surname because it still has Appearances:</p>

	foreach (var a in Model.Appearances)
	{
		<text>
			<p>
				In '@Shared.DisplayName(a.Episode1)' played by @Shared.ShortName(a.Actor1): @Html.ActionLink("Delete", "Delete", "Appearance", new { id = a.ID }, null)
		</text>
	}
}

@if (Model.Renames.Any())
{
<p>You can't delete @Model.Forename @Model.Surname because it still has Renames:</p>

	foreach (var r in Model.Renames)
	{
		<text>
			<p>
				In '@Html.ActionLink(Shared.DisplayName(r.Adaptation1), "Details", "Adaptation", new { id = r.Adaptation }, null)', @Shared.ShortName(r.Actor1) plays @Shared.DisplayName(r.Character1) as "@Shared.LongName(new HolmesMVC.Models.Character {Honorific = r.Honorific, Honorific1 = r.Honorific1, Forename = r.Forename, Surname = r.Surname })".
		</text>
	}
}
