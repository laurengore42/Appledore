@using HolmesMVC
@model IEnumerable<HolmesMVC.Models.Appearance>


@if (!Model.Any())
{
    <text><ul>
            <li>No actor appearances found for episode ID: @ViewBag.EpId.</li>
        </ul></text>
}
else
{
    var canonPage = Model.First().Episode.Season.Adaptation.IsCanon;
    var castTitle = canonPage ? "Characters" : "Cast";

    <table class="lineddetails">
        <tr>
            <th colspan="3">@castTitle</th>
        </tr>
        @foreach (var appearance in Model)
        {
            var charName = appearance.Character.LongName;
            var actorName = appearance.Actor.ShortName;
            var rename = appearance.GetRename();
            <tr>
                @if (canonPage)
                {
                    <td colspan="2">@Html.ActionLink(charName, "Details", "Character", new { appearance.Character.UrlName }, null)</td>
                }
                else
                {
                    <td>
                        @if (actorName == "(mentioned)")
                        {
                            <text>(mentioned)</text>
                        }
                        else
                        {
                            @Html.ActionLink(actorName == null || actorName.Length == 0 ? "ACTOR WITH NO NAME???" : actorName, "Details", "Actor", new { appearance.Actor.UrlName }, null)
                        }
                </td>
                <td class="castchar">
                    as
					<span @if (appearance.Character.IsCanon) { <text> class="strong" </text> }>
						@if (null == rename)
						{
							var characterLongNameLink = appearance.Character.LongName;
							if (characterLongNameLink == "")
							{
								characterLongNameLink = "(character " + appearance.CharacterID + ")";
							}
							@Html.ActionLink(characterLongNameLink, "Details", "Character", new { appearance.Character.UrlName }, null)
						}
						else
						{
							@Html.ActionLink(rename.LongName, "Details", "Character", new { appearance.Character.UrlName }, null)
						}
					</span>
                </td>
            }
                @if (Request.IsAuthenticated && ViewBag.Locked == false)
                {
                    <td class="linedbutton">
                        @Html.ActionLink("Delete", "Delete", new { appearance.ID })
                    @if (!canonPage)
                    {
                        if (null == rename)
                        {
                            <text>&nbsp;@Html.ActionLink("Rename", "Create", "Rename", new { appearance.ID }, null)</text>
                        }
                        else
                        {
                            <text>&nbsp;@Html.ActionLink("Unrename", "Delete", "Rename", new { appearance.ID }, null)</text>
                        }
                    }
                </td>
            }
            </tr>
        }
    </table>
}
@if (Request.IsAuthenticated && ViewBag.Locked == false)
{
    <div class="addappearlink">
        @Html.ActionLink("Add appearance", "Create", "Appearance", new { ID = ViewBag.EpId }, null)
    </div>
    <div class="addappearlink">
        @Html.ActionLink("Fill from IMDb", "DataEntry", "Home", new { epId = ViewBag.EpId }, null)
    </div>
}

<div>
    @if (Request.IsAuthenticated)
    {
        <br />
        if (ViewBag.Locked == true)
        {
            @Html.ActionLink("Unlock", "Unlock", "Episode", new { id = ViewBag.EpId }, null)
        }
        else
        {
            @Html.ActionLink("Lock", "Lock", "Episode", new { id = ViewBag.EpId }, null)
        }
    }
    else
    {
        if (ViewBag.Locked != true)
        {
            <i>(cast list not finalised)</i>
        }
    }
</div>
