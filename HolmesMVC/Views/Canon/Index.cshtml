@using HolmesMVC
@using HolmesMVC.Enums
@using HolmesMVC.Models
@using HolmesMVC.Models.ViewModels
@model CanonView

@{
    ViewBag.Title = Model.Adaptation.DisplayName;
    
    int i;
    int year;
    int tenthYear;
    int decade;
    int lastDecade = 0;
    string decadeString;

    const int Publish = (int)CanonOrder.Published;
    const int Baring = (int)CanonOrder.Baring;
}

<h2 class="detailscategory">Adaptation</h2>
<h2 class="detailsheader">@ViewBag.Title</h2>

<p>
    This @Model.Adaptation.MediumName adaptation began in <span id="startYearSpan"></span>, and was made by @Model.Adaptation.Company.
</p>

@if (Request.IsAuthenticated)
{
    <p>@Html.ActionLink("Add episode", "Create", "Episode", new { Model.Adaptation.ID }, null) </p>
}
@Html.Action("DatabaseLinks", "Home", new { table = "Adaptation", id = Model.Adaptation.ID })

<div id="timelinecontainer">
Choose a date system:<br />
<input type="button" value="Baring-Gould" onclick="changeTheDates(@Baring);" /><br />
    <canvas class="timelineCanvas" data-startyear="@Model.StartYear[Baring]" data-startmonth="@Model.StartMonth[Baring]" data-endyear="@Model.EndYear[Publish]" data-endmonth="@Model.EndMonth[Publish]" data-spottyvalues="@Model.EpisodeDateString[Baring]">Turn on &lt;canvas&gt;.</canvas><br />
<input type="button" value="Publication" onclick="changeTheDates(@Publish);" /><br />
    <canvas class="timelineCanvas" data-startyear="@Model.StartYear[Baring]" data-startmonth="@Model.StartMonth[Baring]" data-endyear="@Model.EndYear[Publish]" data-endmonth="@Model.EndMonth[Baring]" data-spottyvalues="@Model.EpisodeDateString[Publish]">Turn on &lt;canvas&gt;.</canvas><br />
</div>

<!-- Publication order -->

<table id="PubOrder" style="display: none">
    @{
        var lastEpisode = new Episode();
        i = 0;
        foreach (var e in Model.Adaptation.Episodes)
        {
            var seasontext = "";
            if (i == 0 && !Model.Adaptation.SingleSeason)
            {
                seasontext = "Season 1";
            }
            else if (i > 0 && lastEpisode.Season1.AirOrder != e.Season1.AirOrder)
            {
                seasontext = "Season " + e.Season1.AirOrder;
            }
            if (seasontext != "")
            {
                if (!string.IsNullOrWhiteSpace(e.Season1.Name))
                {
                    seasontext = e.Season1.Name;
                }
                <tr>
                    <td colspan="2" class="adaptseason">
                        <h3>@seasontext</h3>
                    </td>
                </tr>
            }
            <tr>
                <td>@Shared.VagueDate(e.Airdate, DatePrecision.Month, true, false)</td>
                <td>@Html.ActionLink(e.Story1.Name, "Details", "Story", new { e.Story1.ID }, null)</td>
            </tr>
            lastEpisode = e;
            i++;
        }
    }
</table>

<!-- Baring-Gould order -->

<table id="BaringOrder" style="display: none">
    @{
        i = 0;
        foreach (var s in Model.Stories.OrderBy(a => a.Date.BaringGouldStart))
        {
            year = s.Date.BaringGouldStart.Year;
            tenthYear = (int)Math.Floor((double)year / 10);
            decade = 10 * tenthYear;
            decadeString = decade + "s";
            if (i == 0 || (i > 0 && lastDecade != decade))
            {
            <tr>
                <td colspan="2" class="adaptseason">
                    <h3>@decadeString</h3>
                </td>
            </tr>
            }
            <tr>             
                <td>
                    @Shared.VagueDate(s.Date.BaringGouldStart, (DatePrecision)s.Date.BaringGouldPrecision, false, true)
                </td>                
                <td>
                    @Html.ActionLink(s.Name, "Details", "Story", new { s.ID }, null)
                </td>
            </tr>
            lastDecade = decade;
            i++;
        }
    }
</table>

@section Scripts {
    <script type="text/javascript" src="~/Scripts/Apdore-timeline.js"></script>

    <script>
        $(document).ready(function() {
            changeTheDates(@Model.UserCanonOrder);
            
            $('#startYearSpan').text(@Model.StartYear[Publish]);
        });

        function changeTheDates(sysNum) {
            $('#PubOrder').hide(); 
            $('#BaringOrder').hide();
            switch (sysNum) {
                case @(Baring) :
                    $('#BaringOrder').show();
                    break;
                default :
                    $('#PubOrder').show();
            }
        }
    </script>
}

