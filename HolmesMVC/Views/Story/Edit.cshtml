@using HolmesMVC.Enums
@model HolmesMVC.Models.Story

@{
    ViewBag.Title = "Edit Story";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Story</legend>
        <div class="editor-label">
            @Html.LabelFor(model => model.ID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ID)
            @Html.ValidationMessageFor(model => model.ID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.VillainType)
        </div>
        <div class="editor-field">
            <select name="VillainType">
                <option value="@((int)Villain.Unclear)" @if ((Villain)Model.VillainType == Villain.Unclear)
                                  {<text>selected</text>}>@Villain.Unclear.ToString()</option>
                <option value="@((int)Villain.Abduction)" @if ((Villain)Model.VillainType == Villain.Abduction)
                                  {<text>selected</text>}>@Villain.Abduction.ToString()</option>
                <option value="@((int)Villain.Theft)" @if ((Villain)Model.VillainType == Villain.Theft)
                                  {<text>selected</text>}>@Villain.Theft.ToString()</option>
                <option value="@((int)Villain.Murder)" @if ((Villain)Model.VillainType == Villain.Murder)
                                  {<text>selected</text>}>@Villain.Murder.ToString()</option>
                <option value="@((int)Villain.AttemptedMurder)" @if ((Villain)Model.VillainType == Villain.AttemptedMurder)
                                  {<text>selected</text>}>@Villain.AttemptedMurder.ToString()</option>
                <option value="@((int)Villain.FrameForMurder)" @if ((Villain)Model.VillainType == Villain.FrameForMurder)
                                  {<text>selected</text>}>@Villain.FrameForMurder.ToString()</option>
                <option value="@((int)Villain.Blackmail)" @if ((Villain)Model.VillainType == Villain.Blackmail)
                                  {<text>selected</text>}>@Villain.Blackmail.ToString()</option>
                <option value="@((int)Villain.None)" @if ((Villain)Model.VillainType == Villain.None)
                                  {<text>selected</text>}>@Villain.None.ToString()</option>
            </select>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.OutcomeType)
        </div>
        <div class="editor-field">
            <select name="OutcomeType">
                <option value="@((int)Outcome.Unclear)" @if ((Outcome)Model.OutcomeType == Outcome.Unclear)
                                  {<text>selected</text>}>@Outcome.Unclear.ToString()</option>
                <option value="@((int)Outcome.Released)" @if ((Outcome)Model.OutcomeType == Outcome.Released)
                                  {<text>selected</text>}>@Outcome.Released.ToString()</option>
                <option value="@((int)Outcome.Escaped)" @if ((Outcome)Model.OutcomeType == Outcome.Escaped)
                                  {<text>selected</text>}>@Outcome.Escaped.ToString()</option>
                <option value="@((int)Outcome.Arrested)" @if ((Outcome)Model.OutcomeType == Outcome.Arrested)
                                  {<text>selected</text>}>@Outcome.Arrested.ToString()</option>
                <option value="@((int)Outcome.Died)" @if ((Outcome)Model.OutcomeType == Outcome.Died)
                                  {<text>selected</text>}>@Outcome.Died.ToString()</option>
                <option value="@((int)Outcome.DiedInCustody)" @if ((Outcome)Model.OutcomeType == Outcome.DiedInCustody)
                                  {<text>selected</text>}>@Outcome.DiedInCustody.ToString()</option>
                <option value="@((int)Outcome.None)" @if ((Outcome)Model.OutcomeType == Outcome.None)
                                  {<text>selected</text>}>@Outcome.None.ToString()</option>
            </select>
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

@section Scripts {
    @Scripts.Render("~/Scripts/Apdore-editorscripts.js")
}